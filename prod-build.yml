# Do not change version. This is the version of aws buildspec, not the version of your buildspec file.
version: 0.2

env:
  variables:
    AWS_ACCOUNT_ID: "745421575498"
    NP_AWS_ACCOUNT_ID: "286985534438"
    AWS_REPO_NAME: "experiments-api"
    AWS_CLUSTER_NAME: "fargate"
    AWS_DEFAULT_REGION: "us-east-1"
    AWS_SERVICE_NAME: "experiments-api-prod"

phases:
  install:
    runtime-versions:
      nodejs: 14
  pre_build:
    commands:
      - echo Logging in to NP Amazon ECR...
      - export NP_DOCKER_URL=$NP_AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$AWS_REPO_NAME
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $NP_DOCKER_URL
  build:
    commands:
      - echo Build started on `date`
      - echo Version is $VERSION
      - export DOCKER_URL=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$AWS_REPO_NAME
      - echo Pulling NP Docker image...
      - docker pull $NP_DOCKER_URL:$VERSION
      - echo Logging in to Prod Amazon ECR...
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $DOCKER_URL
      - echo Tagging the Docker image...
      - docker tag $NP_DOCKER_URL:$VERSION $DOCKER_URL:latest
      - echo Pushing the Docker image to Prod...
      - docker push $DOCKER_URL:latest
  post_build:
    commands:
      - echo Restarting Service
      - aws ecs update-service --cluster $AWS_CLUSTER_NAME --service $AWS_SERVICE_NAME --force-new-deployment
      - echo Build completed on `date`
