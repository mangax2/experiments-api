{
    "swagger": "2.0",
    "info": {
        "title": "Experiments API",
        "description": "Experiment APIs to create experiment model",
        "version": "v1"
    },
    "host": "api01-np.agro.services",
    "schemes": [
        "https"
    ],
    "basePath": "/experiments-api",
    "produces": [
        "application/json"
    ],
    "paths": {
        "/experiment-designs": {
            "get": {
                "summary": "Get all experiment designs",
                "description": "Returns all experiment designs that can be used\n",
                "tags": [
                    "Experiment Designs"
                ],
                "responses": {
                    "200": {
                        "description": "Array of experiment designs",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ExperimentDesign"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "summary": "Adds a new experiment design",
                "description": "Posts a new experiment design",
                "tags": [
                    "Experiment Designs"
                ],
                "parameters": [
                    {
                        "name": "experimentDesign",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ExperimentDesignPayload"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "ID of newly created experiment design",
                        "schema": {
                            "type": "number"
                        }
                    },
                    "400": {
                        "description": "Invalid body",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/experiment-designs/{id}": {
            "get": {
                "summary": "Get one experiment design entity",
                "description": "Returns a single experiment design entity\n",
                "tags": [
                    "Experiment Designs"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Array of experiment designs",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ExperimentDesign"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid Request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Experiment Design Does Not Exist",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update one experiment design",
                "description": "Updates a single experiment design entity\n",
                "tags": [
                    "Experiment Designs"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "experimentDesign",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ExperimentDesignPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated Experiment Design entity",
                        "schema": {
                            "$ref": "#/definitions/ExperimentDesign"
                        }
                    },
                    "400": {
                        "description": "Invalid Request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Experiment Design Does Not Exist",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Deletes one experiment design",
                "description": "Deletes a single experiment design entity\n",
                "tags": [
                    "Experiment Designs"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Deleted Experiment Design entity",
                        "schema": {
                            "type": "number"
                        }
                    },
                    "400": {
                        "description": "Invalid Request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Experiment Design Does Not Exist",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/experiments": {
            "get": {
                "summary": "get all experiment entities",
                "description": "This endpoint returns information about the experiments.\n",
                "tags": [
                    "Experiments"
                ],
                "responses": {
                    "200": {
                        "description": "An array of experiments",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ExperimentResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "summary": "post one or more experiment entities",
                "description": "Creates new experiments in Experiments System.\n",
                "tags": [
                    "Experiments"
                ],
                "parameters": [
                    {
                        "name": "experiment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ExperimentPayload"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Experiment Created",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CreateResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid/Problematic Input",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Error"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/experiments/{id}": {
            "get": {
                "summary": "get one experiment entity",
                "description": "The Experiments endpoint returns information about the experiment entities in Experiments System.\n",
                "tags": [
                    "Experiments"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Experiment entity",
                        "schema": {
                            "$ref": "#/definitions/ExperimentResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid ID",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "No Experiment Found For ID",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "put one experiment entity",
                "description": "update experiment entity in Experiments System.\n",
                "tags": [
                    "Experiments"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    },
                    {
                        "name": "experiment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ExperimentPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Experiment entity",
                        "schema": {
                            "$ref": "#/definitions/ExperimentResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid/Problematic Input",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Error"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "No Experiment Found For ID",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "summary": "delete one experiment entity",
                "description": "delete experiment entity in Experiments System.\n",
                "tags": [
                    "Experiments"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Experiment Deleted",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid ID",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "No Experiment Found For ID",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/experiments/{id}/hypotheses": {
            "get": {
                "summary": "get all hypotheses for given experiment id.",
                "description": "This endpoint returns information about the hypotheses entities associated with one Experiment.\n",
                "tags": [
                    "Hypotheses"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Hypotheses",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/HypothesisResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid ID",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "No Experiment Found For ID",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/experiments/{id}/dependent-variables": {
            "get": {
                "summary": "get all dependent variables for given experiment id.",
                "description": "This endpoint returns information about the dependent variable entities associated with one Experiment.\n",
                "tags": [
                    "Dependent Variables"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Dependent Variables",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/DependentVariableResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid ID",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "No Experiment Found For ID",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/hypotheses": {
            "get": {
                "summary": "get all hypotheses entities",
                "description": "This endpoint returns information about the hypotheses.\n",
                "tags": [
                    "Hypotheses"
                ],
                "responses": {
                    "200": {
                        "description": "An array of hypotheses",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/HypothesisResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "summary": "post one or more experiment entities",
                "description": "Creates new hypotheses in Experiments System.\n",
                "tags": [
                    "Hypotheses"
                ],
                "parameters": [
                    {
                        "name": "hypotheses",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/HypothesisPayload"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "hypotheses Created",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CreateResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid/Problematic Input",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Error"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/hypotheses/{id}": {
            "get": {
                "summary": "get one hypothesis entity",
                "description": "The hypotheses endpoint returns information about the hypothesis entities in Experiments System.\n",
                "tags": [
                    "Hypotheses"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Hypotheses entity",
                        "schema": {
                            "$ref": "#/definitions/HypothesisResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid ID",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "No Hypothesis Found For ID",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "put one hypothesis entity",
                "description": "update Hypothesis entity in Experiments System.\n",
                "tags": [
                    "Hypotheses"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    },
                    {
                        "name": "hypothesis",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/HypothesisPayload"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Hypothesis entity",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/HypothesisResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid/Problematic Input",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Error"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "No Hypothesis Found For ID",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "summary": "delete one hypothesis entity",
                "description": "delete hypothesis entity in Experiments System.\n",
                "tags": [
                    "Hypotheses"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "hypothesis Deleted",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid ID",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "No Hypothesis Found For ID",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/dependent-variables/{id}": {
            "get": {
                "summary": "get one dependent variable entity",
                "description": "The dependent variables endpoint returns information about the dependent variable entities in Experiments System.\n",
                "tags": [
                    "Dependent Variables"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "integer",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ependent Variable entity",
                        "schema": {
                            "$ref": "#/definitions/DependentVariableResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid ID",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "No Dependent Variable Found For ID",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "summary": "delete one Dependent Variable entity",
                "description": "delete Dependent Variable entity in Experiments System.\n",
                "tags": [
                    "Dependent Variables"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Dependent Variable Deleted",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid ID",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "No Dependent Variable Found For ID",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/dependent-variables": {
            "get": {
                "summary": "get all dependent variable entities",
                "description": "This endpoint returns information about the dependent-variables.\n",
                "tags": [
                    "Dependent Variables"
                ],
                "responses": {
                    "200": {
                        "description": "An array of Dependent Variables",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/DependentVariableResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "summary": "post one or more dependent variable entities",
                "description": "Creates new Dependent Variables in Experiments System.\n",
                "tags": [
                    "Dependent Variables"
                ],
                "parameters": [
                    {
                        "name": "DependentVariables ",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/DependentVariablePayloadForPOST"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Dependent Variable Created",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CreateResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid/Problematic Input",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Error"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },

            "put": {
                "summary": "put one or more dependent variable entities",
                "description": "Update Dependent Variables in Experiments System.\n",
                "tags": [
                    "Dependent Variables"
                ],
                "parameters": [
                    {
                        "name": "DependentVariables",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/DependentVariablePayloadForPUT"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Dependent Variable Updated",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/UpdateResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid/Problematic Input",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Error"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }

        },

        "/factor-types": {
            "get": {
                "summary": "Get all factor types",
                "description": "Returns all factor types that can be used\n",
                "tags": [
                    "Factor Types"
                ],
                "responses": {
                    "200": {
                        "description": "Array of factor types",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/FactorType"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "summary": "Adds a new factor type",
                "description": "Creates a new factor type",
                "tags": [
                    "Factor Types"
                ],
                "parameters": [
                    {
                        "name": "factorType",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/FactorTypePayload"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "ID of newly created factor type",
                        "schema": {
                            "type": "number"
                        }
                    },
                    "400": {
                        "description": "Invalid body",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/factor-types/{id}": {
            "get": {
                "summary": "Get one factor type entity",
                "description": "Returns a single factor type entity\n",
                "tags": [
                    "Factor Types"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Single Factor Type Entity",
                        "schema": {
                            "$ref": "#/definitions/FactorType"
                        }
                    },
                    "400": {
                        "description": "Invalid Request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Factor Type Does Not Exist",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update one factor type",
                "description": "Updates a single factor type entity\n",
                "tags": [
                    "Factor Types"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "factorType",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FactorTypePayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated Factor Type entity",
                        "schema": {
                            "$ref": "#/definitions/FactorType"
                        }
                    },
                    "400": {
                        "description": "Invalid Request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Factor Type Does Not Exist",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Deletes one factor type",
                "description": "Deletes a single factor type entity\n",
                "tags": [
                    "Factor Types"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Deleted Experimental Design entity",
                        "schema": {
                            "type": "number"
                        }
                    },
                    "400": {
                        "description": "Invalid Request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Factor Type Does Not Exist",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "ExperimentDesign": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "unique id for experiment design entity"
                },
                "name": {
                    "type": "string",
                    "description": "name of experiment design"
                }
            }
        },
        "ExperimentDesignPayload": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "name of experiment design"
                },
                "userId": {
                    "type": "string",
                    "description": "userId for audit use."
                }
            }
        },
        "ExperimentResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "unique id for experiment entity"
                },
                "name": {
                    "type": "string",
                    "description": "name of the experiment entity."
                },
                "subjectType": {
                    "type": "string",
                    "description": "Subject of the Experiment."
                },
                "ExperimentDesign": {
                    "type": "string",
                    "description": "Experiment Design Type"
                },
                "status": {
                    "type": "string",
                    "description": "status of the experiment entity."
                },
                "createdDate": {
                    "type": "string",
                    "description": "created timestamp in UTC."
                },
                "createdUserId": {
                    "type": "string",
                    "description": "created user id for audit tracking."
                },
                "modifiedDate": {
                    "type": "string",
                    "description": "Modified timestamp in UTC."
                },
                "modifiedUserId": {
                    "type": "string",
                    "description": "modified user id for audit tracking."
                }
            }
        },
        "HypothesisResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "unique id for entity"
                },
                "description": {
                    "type": "string",
                    "description": "description of the entity."
                },
                "isNull": {
                    "type": "boolean",
                    "description": "Type of Hypotheses."
                },
                "status": {
                    "type": "string",
                    "description": "status of Hypotheses."
                },
                "experimentId": {
                    "type": "integer",
                    "description": "ExperimentId of experiment entity"
                },
                "createdDate": {
                    "type": "string",
                    "description": "created timestamp in UTC."
                },
                "createdUserId": {
                    "type": "string",
                    "description": "created user id for audit tracking."
                },
                "modifiedDate": {
                    "type": "string",
                    "description": "Modified timestamp in UTC."
                },
                "modifiedUserId": {
                    "type": "string",
                    "description": "modified user id for audit tracking."
                }
            }
        },
        "DependentVariableResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "unique id for  entity"
                },
                "required": {
                    "type": "boolean",
                    "description": "boolean vaule to specify dependent variable is required or not."
                },
                "name": {
                    "type": "string",
                    "description": "name of dependent variable."
                },
                "experimentId": {
                    "type": "integer",
                    "description": "ExperimentId of experiment entity"
                },
                "createdDate": {
                    "type": "string",
                    "description": "created timestamp in UTC."
                },
                "createdUserId": {
                    "type": "string",
                    "description": "created user id for audit tracking."
                },
                "modifiedDate": {
                    "type": "string",
                    "description": "Modified timestamp in UTC."
                },
                "modifiedUserId": {
                    "type": "string",
                    "description": "modified user id for audit tracking."
                }
            }
        },
        "CreateResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "integer",
                    "description": "http status code, 201 for success and 4.x.x for errors."
                },
                "message": {
                    "type": "string",
                    "description": "Resource created or error description in case of error."
                },
                "id": {
                    "type": "integer",
                    "description": "id of newely created resource or black in case of error."
                }
            }
        },
        "UpdateResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "integer",
                    "description": "http status code, 200 for success and 4.x.x for errors."
                },
                "message": {
                    "type": "string",
                    "description": "Resource updated or error description in case of error."
                },
                "id": {
                    "type": "integer",
                    "description": "id of updated resource or black in case of error."
                }
            }
        },
        "ExperimentPayload": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "name of the experiment entity."
                },
                "subjectType": {
                    "type": "string",
                    "description": "Subject of the Experiment."
                },
                "experimentDesign": {
                    "type": "string",
                    "description": "ExperimentDesign Type."
                },
                "status": {
                    "type": "string",
                    "description": "status of the experiment entity."
                },
                "userId": {
                    "type": "string",
                    "description": "userId for audit use."
                }
            }
        },
        "HypothesisPayload": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "description of the hypothesis entity."
                },
                "isNull": {
                    "type": "boolean",
                    "description": "hypothesis type."
                },
                "status": {
                    "type": "string",
                    "description": "Hypotheses status - ACTIVE, INACTIVE."
                },
                "experimentId": {
                    "type": "integer",
                    "description": "experimentId of experiment entity."
                },
                "userId": {
                    "type": "string",
                    "description": "userId for audit use."
                }
            }
        },
        "FactorType": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "unique id for factor type"
                },
                "type": {
                    "type": "string",
                    "description": "name of the factor type"
                }
            }
        },
        "FactorTypePayload": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string",
                    "description": "name of the factor type"
                },
                "userId": {
                    "type": "string",
                    "description": "userId for audit use."
                }
            }
        },
        "DependentVariablePayloadForPOST": {
            "type": "object",
            "properties": {
                "required": {
                    "type": "boolean",
                    "description": "is rquired boolean value."
                },
                "name": {
                    "type": "boolean",
                    "description": "name of depnendent variable."
                },
                "experimentId": {
                    "type": "integer",
                    "description": "experimentId of experiment entity."
                },
                "userId": {
                    "type": "string",
                    "description": "userId for audit use."
                }
            }
        },
        "DependentVariablePayloadForPUT": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "id of dependent varable to update."
                },
                "required": {
                    "type": "boolean",
                    "description": "is rquired boolean value."
                },
                "name": {
                    "type": "boolean",
                    "description": "name of depnendent variable."
                },
                "experimentId": {
                    "type": "integer",
                    "description": "experimentId of experiment entity."
                },
                "userId": {
                    "type": "string",
                    "description": "userId for audit use."
                }
            }
        },
        "Error": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "integer",
                    "format": "int32"
                },
                "code": {
                    "type": "string"
                },
                "errorMessage": {
                    "type": "string"
                }
            }
        }
    }
}